[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spotify-app-agent-template"
version = "1.0.0"
description = "A comprehensive template for building Spotify playlist management bots with advanced features"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["spotify", "bot", "playlist", "music", "automation", "template"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
dependencies = [
    "requests>=2.28.0",
    "pyyaml>=6.0",
    "python-dotenv>=0.19.0",
    "schedule>=1.2.0",
    "pandas>=1.5.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "numpy>=1.24.0",
    "flask>=2.3.0",
    "flask-socketio>=5.3.0",
    "python-socketio>=5.8.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "tabulate>=0.9.0",
    "tenacity>=8.2.0",
    "cryptography>=41.0.0",
    "prometheus-client>=0.17.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.3.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/spotify-app-agent-template"
Documentation = "https://github.com/yourusername/spotify-app-agent-template#readme"
Repository = "https://github.com/yourusername/spotify-app-agent-template.git"
"Bug Tracker" = "https://github.com/yourusername/spotify-app-agent-template/issues"
"Release Notes" = "https://github.com/yourusername/spotify-app-agent-template/releases"

[project.scripts]
spotify-app-agent = "app.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*", "tools*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "tools"]
known_third_party = ["requests", "yaml", "dotenv", "schedule", "pandas", "matplotlib", "seaborn", "numpy", "flask", "click", "rich", "tenacity", "cryptography", "prometheus_client"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "requests.*",
    "yaml.*",
    "dotenv.*",
    "schedule.*",
    "pandas.*",
    "matplotlib.*",
    "seaborn.*",
    "numpy.*",
    "flask.*",
    "click.*",
    "rich.*",
    "tenacity.*",
    "cryptography.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app", "tools"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
